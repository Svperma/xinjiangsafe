var statusValue = "";
var $j = jQuery.noConflict();
function findArea(upperId, localId, currentLevel, o, lowerId) {
		var upper = $j("#" + upperId).val();
		if (upper == null || "" == upper) {
			alert("请选择上级地区！");
			return;
		}
		var areaLevle = document.getElementById("comLevel").value;
		var areaCode = "";
		var upperCode = "";
		if (currentLevel <= areaLevle) {
			return;
		} else {
			upperCode = document.getElementById(upperId).value;
		}
		var ul = document.getElementById("options_" + o);
		var childNodes = ul.childNodes;
		if (childNodes != null && childNodes.length > 1) {
			for ( var i = 1; i < childNodes.length; i) {
				ul.removeChild(childNodes[i]);
			}
		}
		if (lowerId != null) {
			var ulul = document.getElementById("options_" + lowerId);
			if (ulul.childNodes != null && ulul.childNodes.length > 1) {
				for ( var i = 1; i < ulul.childNodes.length; i) {
					ulul.removeChild(ulul.childNodes[i]);
				}
			}
		}

		
		var actionUrl = "/codeControl/getArea";
		$j.ajax({
					type : "post",
					url : actionUrl,
					contentType: "application/json;chartset=utf-8",
					data : JSON.stringify({
						"remark" : upperCode
					}),
					dataType : "json",
					success : function(data) {
						var select = document.getElementById(o);

						var div = document.getElementById("select_" + o);

						var op;
						var li;
						for ( var i = 0; i < data.length; i++) {
							op = document.createElement("option");
							op.value = data[i].codeCode;
							op.text = data[i].codeCName;
							select.appendChild(op);

							li = document.createElement("li");
							li.innerHTML = data[i].codeCName;
							li.className = "open";
							li.style.cursor = "pointer";
							li.onmouseover = function() {
								this.style.color = "#fff";
								this.style.backgroundColor = "#1ec2ff";
							};
							li.onmouseout = function() {
								this.style.color = "#79A2BD";
								this.style.backgroundColor = "";
							};
							li.onclick = function() {
	
								document.getElementById("select_info_" + o).innerHTML = this.innerHTML;
								var indexs = $j(this).index();
								$j("#" + o).get(0).selectedIndex = indexs; //设置Select索引值为1的项选中 
								$j("#hidden_" + o).val($j("#" + o).val());
							};
							ul.appendChild(li);
						}
					},
					error : function(XMLHttpRequest, textStatus, errorThrown) {
						/* alert(XMLHttpRequest.status);
						alert(XMLHttpRequest.responseText);
						alert(textStatus + ":" + errorThrown);*/ 
						alert("查询有误...")
					}
				});
	}

/**
	获取控件的高度
 */
function getObjHeight(obj){
	return $j(obj).height(); 
}
/**
	获取控件的宽度
 */
function getObjWidth(obj){
	return $j(obj).width();
}
/**
	获取控件的top
 */
function getObjTop(obj){
	return $j(obj).offsetTop;
}
/***
 * 获取控件的left
 */
function getObjLeft(obj){
	return $j(obj).offsetLeft;
}

//获取元素的纵坐标（相对于窗口）
function getTop(o){
	return $j("#"+o).offset().top;
}
//获取元素的横坐标（相对于窗口）
function getLeft(o){
	return $j("#"+o).offset().left;
}
/***
 * 下拉选择
 * @param obj 控件对象
 * @param url 请求的url地址 使用地址栏传参
 * @param flag 是否使用默认返回项的onclick函数，true 为使用，false 不适用
 * @param liFunction flag为false时，执行
 * @param getData 获取返回值的函数
 */
function downList(obj,pathUrl,flag,liFunction,getData){
	var width = getObjWidth(obj);
	var height = getObjHeight(obj);
	var top = getObjTop(obj);
	var left = getObjLeft(obj);
	$j("#downList").remove();
	$j.ajax({
		type:"get",
		url:pathUrl+$j(obj).val(),
		dataType:"json",
		data:'',
		contentType:"text/html;charset=UTF-8",
		success:function(data){
			var div = document.createElement("div");
			$j(div).attr("id","downList");
			$j(div).css({"position":"absolute","top":top+height,"left":left,"width":width,"border-radius":"5px","background-color":"white","border":"1px solid #ECECEC"});
			var ul = document.createElement("ul");
			for(var i=0,n=data.length;i<n;i++){
				var li = document.createElement("li");
				$j(li).css({"margin":"5px 0px","cursor":"pointer"});
				$j(li).mouseover(
						function (){
							$j(this).css({"color":"red","background-color":"#F0F0F0"});
						}
				);
				$j(li).mouseout(
						function (){
							$j(this).css({"color":"black","background-color":"#fff"});
						}
				);
				
				$j(li).click(function(){
					if(!flag){
						$j(obj).val($j(this).text());
						$j("#downList").remove();
					}else{
						liFunction();
						$j("#downList").remove();
					}
					
				});
				if(getData != null){
					li.innerHTML = getData(data[i]);
				}else{
					li.innerHTML = data[i].insuranceName;
				}
				li.innerHTML = getData(data[i]);
				ul.appendChild(li);
				
			}
			
			div.appendChild(ul);
			document.body.appendChild(div);
		},
		error:function(data){
			alert("查询错误！");
		}
	});
}
/*
 * 
 * 点击“详情”弹出框
 */

/**
 * 数字转换大写
 * @param currencyDigits
 * @returns {String}
 */
function convertCurrency(currencyDigits) {
	// Constants:
	var MAXIMUM_NUMBER = 99999999999.99;
	// Predefine the radix characters and currency symbols for output:
	var CN_ZERO = "零";
	var CN_ONE = "壹";
	var CN_TWO = "贰";
	var CN_THREE = "叁";
	var CN_FOUR = "肆";
	var CN_FIVE = "伍";
	var CN_SIX = "陆";
	var CN_SEVEN = "柒";
	var CN_EIGHT = "捌";
	var CN_NINE = "玖";
	var CN_TEN = "拾";
	var CN_HUNDRED = "佰";
	var CN_THOUSAND = "仟";
	var CN_TEN_THOUSAND = "万";
	var CN_HUNDRED_MILLION = "亿";
	var CN_SYMBOL = "人民币";
	var CN_DOLLAR = "元";
	var CN_TEN_CENT = "角";
	var CN_CENT = "分";
	var CN_INTEGER = "整";

	// Variables:
	var integral; // Represent integral part of digit number.
	var decimal; // Represent decimal part of digit number.
	var outputCharacters; // The output result.
	var parts;
	var digits, radices, bigRadices, decimals;
	var zeroCount;
	var i, p, d;
	var quotient, modulus;

	// Validate input string:
	currencyDigits = currencyDigits.toString();
	if (currencyDigits == "") {
	//alert("Empty input!");
	return "";
	}
	if (currencyDigits.match(/[^,.\d]/) != null) {
	alert("Invalid characters in the input string!");
	return "";
	}
	if ((currencyDigits).match(/^((\d{1,3}(,\d{3})*(.((\d{3},)*\d{1,3}))?)|(\d+(.\d+)?))$/) == null) {
	alert("Illegal format of digit number!");
	return "";
	}

	// Normalize the format of input digits:
	currencyDigits = currencyDigits.replace(/,/g, ""); // Remove comma delimiters.
	currencyDigits = currencyDigits.replace(/^0+/, ""); // Trim zeros at the beginning.
	// Assert the number is not greater than the maximum number.
	if (Number(currencyDigits) > MAXIMUM_NUMBER) {
	alert("Too large a number to convert!");
	return "";
	}

	// Process the coversion from currency digits to characters:
	// Separate integral and decimal parts before processing coversion:
	parts = currencyDigits.split(".");
	if (parts.length > 1) {
	integral = parts[0];
	decimal = parts[1];
	// Cut down redundant decimal digits that are after the second.
	decimal = decimal.substr(0, 2);
	}
	else {
	integral = parts[0];
	decimal = "";
	}
	// Prepare the characters corresponding to the digits:
	digits = new Array(CN_ZERO, CN_ONE, CN_TWO, CN_THREE, CN_FOUR, CN_FIVE, CN_SIX, CN_SEVEN, CN_EIGHT, CN_NINE);
	radices = new Array("", CN_TEN, CN_HUNDRED, CN_THOUSAND);
	bigRadices = new Array("", CN_TEN_THOUSAND, CN_HUNDRED_MILLION);
	decimals = new Array(CN_TEN_CENT, CN_CENT);
	// Start processing:
	outputCharacters = "";
	// Process integral part if it is larger than 0:
	if (Number(integral) > 0) {
	zeroCount = 0;
	for (i = 0; i < integral.length; i++) {
	p = integral.length - i - 1;
	d = integral.substr(i, 1);
	quotient = p / 4;
	modulus = p % 4;
	if (d == "0") {
	zeroCount++;
	}
	else {
	if (zeroCount > 0)
	{
	outputCharacters += digits[0];
	}
	zeroCount = 0;
	outputCharacters += digits[Number(d)] + radices[modulus];
	}
	if (modulus == 0 && zeroCount < 4) {
	outputCharacters += bigRadices[quotient];
	}
	}
	outputCharacters += CN_DOLLAR;
	}
	// Process decimal part if there is:
	if (decimal != "") {
	for (i = 0; i < decimal.length; i++) {
	d = decimal.substr(i, 1);
	if (d != "0") {
	outputCharacters += digits[Number(d)] + decimals[i];
	}
	}
	}
	// Confirm and return the final output string:
	if (outputCharacters == "") {
	outputCharacters = CN_ZERO + CN_DOLLAR;
	}
	if (decimal == "") {
	outputCharacters += CN_INTEGER;
	}
	//outputCharacters = CN_SYMBOL + outputCharacters;
	return outputCharacters;
}

/**
 * 获取企业类型
 * upperId 上级id
 * id 当前id
 */
function getBusinessClass(upperId,id){
	var classCode = $j("#"+upperId).val();
	if(classCode == null || classCode == ""){
		alert("请选择行业大类");
		return;
	}
	$j("#"+id).length = 1;
	$j.ajax({
		type:"get",
		url:"/codeControl/getGgCodeByObj?codeType=IndustryType&remark="+classCode,
		data:{},
		dataType:"json",
		contentType:"application/json;charset=utf-8",
		success:function(data){
			var select = $j("#"+id);
			var ul = $j("#options_"+id);
			document.getElementById("select_info_" + id).innerHTML = "企业类型";
			$j(ul).empty();
			document.getElementById(id).length = 1;
			$j(ul).append("<li class='open_selected' style='cursor:pointer'>企业类型</li>");
			for(var i=0;i<data.length;i++){
				var op = document.createElement("option");
				op.value = data[i].codeCode;
				op.text = data[i].codeCName;
				$j(select).append(op);
				var li = document.createElement("li");
				$j(li).attr("class","open");
				$j(li).attr("id","selected_languageh");
				$j(li).css("cursor","pointer");
				li.onmouseover = function() {
					this.style.color = "#fff";
					this.style.backgroundColor = "#1ec2ff";
				};
				li.onmouseout = function() {
					this.style.color = "#79A2BD";
					this.style.backgroundColor = "";
				};
				li.onclick = function() {
					document.getElementById("select_info_" + id).innerHTML = this.innerHTML;
					var indexs = $j(this).index();
					$j("#" + id).get(0).selectedIndex = indexs; //设置Select索引值为1的项选中 
				};
				li.innerHTML = data[i].codeCName;
				$j(ul).append(li);
			}
		},
		error:function(){
			alert("error")
		}
	});
}

function showUpperView(srcPath,width,height){
	var parentWidth = window.outerWidth;
	var parentHeight = window.outerHeight;
	var di = document.createElement("div");
	di.setAttribute("id","showId");
	//di.innerHTML = "<iframe src='jsp/basicInfo/addUser.jsp' width='50%' height='75%' style='background-color:white;' style='filter:Alpha(Opacity=100)'></iframe>";
	di.style.left = "40%";
	di.style.top  = "30%";
	di.style.textAlign = "center";
	di.style.width = parentWidth+"px";
	di.style.height = parentHeight+"px";
	di.style.position = "absolute";
	di.style.zIndex = '1000';
	di.style.opacity='100';
	di.style.filter="alpha(opacity=0)";
	di.style.display = "block";
	/*document.body.appendChild(di);*/
	
	var dii = document.createElement("div");
	dii.setAttribute("id","contentId");
	dii.innerHTML = "<iframe src='"+srcPath+"' id='show_iframe' frameborder='0' name='show_iframe' width='100%' height='100%' style='background-color:white;' style='filter:Alpha(Opacity=100)'></iframe>";
	dii.style.left = (parentWidth - width)/2+"px";
	dii.style.top  = "100px";
	dii.style.width = width+"px";
	dii.style.height = height+"px";
	/*dii.style.position = "absolute";
	dii.style.zIndex = '1001';*/
	dii.style.opacity='0.9';
	dii.style.filter="alpha(opacity=80)";
	dii.style.backgroundColor = "gray";
	dii.style.display = "block";
	di.appendChild(dii);
	window.parent.frames["mainFrame"].document.body.appendChild(di);
	
}
function removeDiv(){
	frameset.removeChild(parent.document.getElementById("showId"));
	frameset.removeChild(parent.document.getElementById("contentId"));
};